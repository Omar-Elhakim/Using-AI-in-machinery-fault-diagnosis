{"metadata":{"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[{"sourceId":8123067,"sourceType":"datasetVersion","datasetId":4799717},{"sourceId":166574313,"sourceType":"kernelVersion"}],"dockerImageVersionId":30683,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"!pip install tsai optuna  optuna-integration -q","metadata":{"execution":{"iopub.status.busy":"2024-04-18T03:10:37.297301Z","iopub.execute_input":"2024-04-18T03:10:37.298180Z","iopub.status.idle":"2024-04-18T03:10:49.843414Z","shell.execute_reply.started":"2024-04-18T03:10:37.298146Z","shell.execute_reply":"2024-04-18T03:10:49.842095Z"},"trusted":true},"execution_count":30,"outputs":[]},{"cell_type":"code","source":"import pandas as pd \nimport numpy as np \nimport matplotlib.pyplot as plt\nimport  notebookcfa27bdb31 as ArrayGenerator\nfrom tsai.all import *\nfrom fastai.callback.all import *\nimport optuna\nfrom optuna.visualization import plot_optimization_history,plot_param_importances\nimport random ","metadata":{"execution":{"iopub.status.busy":"2024-04-18T03:36:58.363363Z","iopub.execute_input":"2024-04-18T03:36:58.363780Z","iopub.status.idle":"2024-04-18T03:36:58.369958Z","shell.execute_reply.started":"2024-04-18T03:36:58.363740Z","shell.execute_reply":"2024-04-18T03:36:58.369068Z"},"trusted":true},"execution_count":56,"outputs":[]},{"cell_type":"markdown","source":"* To get consistent results","metadata":{}},{"cell_type":"code","source":"torch.manual_seed(37) # tsai is built on it so this should work..... I think?\nrandom.seed(37)\nnp.random.seed(37) ","metadata":{"execution":{"iopub.status.busy":"2024-04-18T03:39:56.142544Z","iopub.execute_input":"2024-04-18T03:39:56.143248Z","iopub.status.idle":"2024-04-18T03:39:56.147661Z","shell.execute_reply.started":"2024-04-18T03:39:56.143215Z","shell.execute_reply":"2024-04-18T03:39:56.146785Z"},"trusted":true},"execution_count":62,"outputs":[]},{"cell_type":"code","source":"df = pd.read_pickle(\"/kaggle/input/vhr-graduation-project-all/vhr_graduation_project_all.pickle\")","metadata":{"execution":{"iopub.status.busy":"2024-04-18T03:10:49.854664Z","iopub.execute_input":"2024-04-18T03:10:49.854965Z","iopub.status.idle":"2024-04-18T03:10:50.137141Z","shell.execute_reply.started":"2024-04-18T03:10:49.854942Z","shell.execute_reply":"2024-04-18T03:10:50.136153Z"},"trusted":true},"execution_count":32,"outputs":[]},{"cell_type":"code","source":"X = np.array(df[\"ts\"].to_list())\ny = np.array(df[\"standardized_faults\"])","metadata":{"execution":{"iopub.status.busy":"2024-04-18T03:10:50.139373Z","iopub.execute_input":"2024-04-18T03:10:50.139669Z","iopub.status.idle":"2024-04-18T03:10:50.242567Z","shell.execute_reply.started":"2024-04-18T03:10:50.139644Z","shell.execute_reply":"2024-04-18T03:10:50.241584Z"},"trusted":true},"execution_count":33,"outputs":[]},{"cell_type":"code","source":"# changed split method to split by bearing\nraw_X, raw_y = ArrayGenerator.generate_dataset_array(dataset_category=4, ts=X, labels=y, split_method=\"bearing\")","metadata":{"execution":{"iopub.status.busy":"2024-04-18T03:10:50.243754Z","iopub.execute_input":"2024-04-18T03:10:50.244048Z","iopub.status.idle":"2024-04-18T03:10:50.249666Z","shell.execute_reply.started":"2024-04-18T03:10:50.244023Z","shell.execute_reply":"2024-04-18T03:10:50.248852Z"},"trusted":true},"execution_count":34,"outputs":[{"name":"stdout","text":"{'Faults classified': 'LXC, XC, Looseness', 'Channels taken': 'All', 'Labels array': 'Binary'}\n","output_type":"stream"}]},{"cell_type":"code","source":"def ts_without_NaN(ts):\n    new_ts = []\n    for value in ts:\n        if not np.isnan(value):\n            new_ts.append(value)\n    return new_ts","metadata":{"execution":{"iopub.status.busy":"2024-04-18T03:10:50.250801Z","iopub.execute_input":"2024-04-18T03:10:50.251027Z","iopub.status.idle":"2024-04-18T03:10:50.261260Z","shell.execute_reply.started":"2024-04-18T03:10:50.251008Z","shell.execute_reply":"2024-04-18T03:10:50.260445Z"},"trusted":true},"execution_count":35,"outputs":[]},{"cell_type":"code","source":"# Padding function\ndef pad(array_3d):\n    max_length = max(len(sub_arr) for arr in array_3d for sub_arr in arr)\n    padded_array_3d = [\n        [\n            np.pad(sub_arr, (0, max_length - len(sub_arr)), mode=\"constant\")\n            for sub_arr in arr\n        ]\n        for arr in array_3d\n    ]\n    return np.array(padded_array_3d)","metadata":{"execution":{"iopub.status.busy":"2024-04-18T03:10:50.262578Z","iopub.execute_input":"2024-04-18T03:10:50.263125Z","iopub.status.idle":"2024-04-18T03:10:50.274731Z","shell.execute_reply.started":"2024-04-18T03:10:50.263092Z","shell.execute_reply":"2024-04-18T03:10:50.274007Z"},"trusted":true},"execution_count":36,"outputs":[]},{"cell_type":"code","source":"# Purging NaN values from our data to get its FFT\nx_nonan = []\nfor bearing in raw_X:\n    x_nonan.append(bearing[:, ~np.any(np.isnan(bearing), axis=0)])","metadata":{"execution":{"iopub.status.busy":"2024-04-18T03:10:50.275632Z","iopub.execute_input":"2024-04-18T03:10:50.275874Z","iopub.status.idle":"2024-04-18T03:10:50.646340Z","shell.execute_reply.started":"2024-04-18T03:10:50.275854Z","shell.execute_reply":"2024-04-18T03:10:50.645516Z"},"trusted":true},"execution_count":37,"outputs":[]},{"cell_type":"markdown","source":"* for training on raw timeseries without windowing","metadata":{}},{"cell_type":"code","source":"x_nonan_padded=pad(x_nonan)","metadata":{"execution":{"iopub.status.busy":"2024-04-18T03:10:50.647416Z","iopub.execute_input":"2024-04-18T03:10:50.647686Z","iopub.status.idle":"2024-04-18T03:10:51.004903Z","shell.execute_reply.started":"2024-04-18T03:10:50.647663Z","shell.execute_reply":"2024-04-18T03:10:51.004106Z"},"trusted":true},"execution_count":38,"outputs":[]},{"cell_type":"code","source":"#  applying earlystopping to get the best results and to prevent overfitting\ncallbacks = [\n    PredictionDynamics(),\n    EarlyStoppingCallback(monitor='f1_score', comp=np.greater , patience=3),\n   \n]","metadata":{"execution":{"iopub.status.busy":"2024-04-18T03:10:51.007890Z","iopub.execute_input":"2024-04-18T03:10:51.008166Z","iopub.status.idle":"2024-04-18T03:10:51.012902Z","shell.execute_reply.started":"2024-04-18T03:10:51.008142Z","shell.execute_reply":"2024-04-18T03:10:51.012049Z"},"trusted":true},"execution_count":39,"outputs":[]},{"cell_type":"code","source":"tfms  = [None, [TSStandardize(by_var=False), Categorize()]]\nbatch_tfms = [TSStandardize(by_var=False)]","metadata":{"execution":{"iopub.status.busy":"2024-04-18T03:10:51.014027Z","iopub.execute_input":"2024-04-18T03:10:51.014306Z","iopub.status.idle":"2024-04-18T03:10:51.026723Z","shell.execute_reply.started":"2024-04-18T03:10:51.014272Z","shell.execute_reply":"2024-04-18T03:10:51.025935Z"},"trusted":true},"execution_count":40,"outputs":[]},{"cell_type":"code","source":"report_splits = get_splits(raw_y, valid_size=0.2, shuffle=True,show_plot=False)\nX_train1, y_train1 = raw_X[report_splits[0]], raw_y[report_splits[0]]\nX_test1, y_test1 = raw_X[report_splits[1]], raw_y[report_splits[1]]    ","metadata":{"execution":{"iopub.status.busy":"2024-04-18T03:10:51.027640Z","iopub.execute_input":"2024-04-18T03:10:51.027888Z","iopub.status.idle":"2024-04-18T03:10:51.113135Z","shell.execute_reply.started":"2024-04-18T03:10:51.027866Z","shell.execute_reply":"2024-04-18T03:10:51.112159Z"},"trusted":true},"execution_count":41,"outputs":[]},{"cell_type":"code","source":"def objective(trial):\n    bs = trial.suggest_int(\"bs\",16,128) #suggest batch size\n    apply_sliding_window=trial.suggest_categorical(\"apply_sliding_window\",[0,1]) # suggest whether to apply sliding window or not \n    no_of_layers =trial.suggest_int(\"no_of_layers\", 1, 2)# suggest number of layers\n    layers=[]\n    dropouts=[]\n    for i in range(no_of_layers): #loop over every layer\n        layers.append(trial.suggest_int(\"no_of_neurons_l{}\".format(i), 8, 64))# suggest each layer size \n        dropouts.append(trial.suggest_float(\"dropout_l{}\".format(i),0.0,0.6)) # suggest dropout rate\n    \n    lr = trial.suggest_float(\"lr\", 1e-5, 1e-1) #suggest learning rate\n    \n    if (apply_sliding_window):\n        overlap_pct=trial.suggest_float(\"overlap_pct\",0.0,1.0)#suggest overlap pct\n        with_fft=trial.suggest_categorical(\"with_fft\",[0,1])# suggest whether to apply FFT or not \n\n        if (overlap_pct>0.5): # to avoid an error in ArrayGenerator \n\n            window_size1=trial.suggest_categorical(\"window_size1\",[2048,4096]) # suggest window size # to avoid CategoricalDistribution does not support dynamic value space error\n            X_train, y_train = ArrayGenerator.apply_sliding_window(\n            X_train1, y_train1, window_size=window_size1, with_fft=with_fft, overlap_pct=overlap_pct\n            )\n            X_test, y_test = ArrayGenerator.apply_sliding_window(\n                X_test1, y_test1, window_size=window_size1, with_fft=with_fft, overlap_pct=0\n            )\n\n        elif(overlap_pct>0.25):\n            window_size2=trial.suggest_categorical(\"window_size2\",[2048,4096,8192]) # suggest window size\n            X_train, y_train = ArrayGenerator.apply_sliding_window(\n            X_train1, y_train1, window_size=window_size2, with_fft=with_fft, overlap_pct=overlap_pct\n            )\n            X_test, y_test = ArrayGenerator.apply_sliding_window(\n                X_test1, y_test1, window_size=window_size2, with_fft=with_fft, overlap_pct=0\n            )\n        else:\n            window_size3=trial.suggest_categorical(\"window_size3\",[2048,4096,8192,16384]) # suggest window size\n            X_train, y_train = ArrayGenerator.apply_sliding_window(\n            X_train1, y_train1, window_size=window_size3, with_fft=with_fft, overlap_pct=overlap_pct\n            )\n            X_test, y_test = ArrayGenerator.apply_sliding_window(\n                X_test1, y_test1, window_size=window_size3, with_fft=with_fft, overlap_pct=0\n            )\n        train_balance_splits = get_splits(\n            y_train, valid_size=0, balance=True, strategy=\"oversample\", shuffle=True,show_plot=False\n        )\n        X_train, y_train = X_train[train_balance_splits[0]], y_train[train_balance_splits[0]]\n        X, y, splits = combine_split_data([X_train, X_test], [y_train, y_test])\n        dls = get_ts_dls(\n            X,\n            y,\n            splits=splits,\n            tfms=tfms,\n            shuffle_train=True,\n            batch_tfms=batch_tfms,\n            bs=[bs, 256],\n        )\n        seq_len=X_train.shape[-1]\n    else:\n        dls = get_ts_dls(\n            x_nonan_padded,\n            raw_y,\n            splits=report_splits,\n            tfms=tfms,\n            shuffle_train=True,\n            batch_tfms=batch_tfms,\n            bs=[bs, 256],\n            )\n        seq_len=16384\n    model = MLP(\n        dls.vars, dls.c, seq_len=seq_len, layers=layers, ps=dropouts, use_bn=True)\n    learn = Learner(\n        dls, model,lr=lr, metrics=[accuracy, Precision(), Recall(), F1Score(), BalancedAccuracy()])\n        \n    with learn.no_logging() , learn.no_bar():\n        learn.fit_one_cycle(15, cbs=callbacks);\n\n    return learn.validate()[-2] # return F1 score","metadata":{"execution":{"iopub.status.busy":"2024-04-18T03:10:51.114416Z","iopub.execute_input":"2024-04-18T03:10:51.114696Z","iopub.status.idle":"2024-04-18T03:10:51.132484Z","shell.execute_reply.started":"2024-04-18T03:10:51.114671Z","shell.execute_reply":"2024-04-18T03:10:51.131677Z"},"trusted":true},"execution_count":42,"outputs":[]},{"cell_type":"markdown","source":"# optimizing ","metadata":{}},{"cell_type":"code","source":"study=optuna.create_study(direction=\"maximize\")\nstudy.optimize(objective,n_trials=100,timeout=2400)","metadata":{"execution":{"iopub.status.busy":"2024-04-18T03:10:51.133633Z","iopub.execute_input":"2024-04-18T03:10:51.133888Z","iopub.status.idle":"2024-04-18T03:26:29.079743Z","shell.execute_reply.started":"2024-04-18T03:10:51.133866Z","shell.execute_reply":"2024-04-18T03:26:29.078780Z"},"trusted":true},"execution_count":43,"outputs":[{"name":"stderr","text":"[I 2024-04-18 03:10:51,149] A new study created in memory with name: no-name-ee871c3e-3bb6-401b-8c77-c308fdb54ee6\n","output_type":"stream"},{"name":"stdout","text":"valid == train\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"   train_loss  valid_loss  accuracy  precision_score  recall_score  f1_score  \\\n4    0.398615    0.373801   0.84186         0.863014      0.724138    0.7875   \n\n   balanced_accuracy_score  \n4                 0.823006  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>train_loss</th>\n      <th>valid_loss</th>\n      <th>accuracy</th>\n      <th>precision_score</th>\n      <th>recall_score</th>\n      <th>f1_score</th>\n      <th>balanced_accuracy_score</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>4</th>\n      <td>0.398615</td>\n      <td>0.373801</td>\n      <td>0.84186</td>\n      <td>0.863014</td>\n      <td>0.724138</td>\n      <td>0.7875</td>\n      <td>0.823006</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x600 with 1 Axes>","image/png":""},"metadata":{}},{"name":"stdout","text":"No improvement since epoch 2: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:10:56,302] Trial 0 finished with value: 0.4 and parameters: {'bs': 89, 'apply_sliding_window': 1, 'no_of_layers': 1, 'no_of_neurons_l0': 13, 'dropout_l0': 0.08716081755501508, 'lr': 0.07902172717227975, 'overlap_pct': 0.2192243867254332, 'with_fft': 1, 'window_size3': 16384}. Best is trial 0 with value: 0.4.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 2: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:11:01,862] Trial 1 finished with value: 0.3148148148148148 and parameters: {'bs': 101, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 27, 'dropout_l0': 0.5362177630464903, 'no_of_neurons_l1': 22, 'dropout_l1': 0.32808028508445347, 'lr': 0.028343689850078548, 'overlap_pct': 0.0769487735759321, 'with_fft': 0, 'window_size3': 8192}. Best is trial 0 with value: 0.4.\n","output_type":"stream"},{"name":"stdout","text":"No improvement since epoch 0: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:11:05,558] Trial 2 finished with value: 0.6377952755905512 and parameters: {'bs': 38, 'apply_sliding_window': 0, 'no_of_layers': 1, 'no_of_neurons_l0': 17, 'dropout_l0': 0.5805432654815118, 'lr': 0.09827549970855158}. Best is trial 2 with value: 0.6377952755905512.\n","output_type":"stream"},{"name":"stdout","text":"No improvement since epoch 0: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:11:08,919] Trial 3 finished with value: 0.6377952755905512 and parameters: {'bs': 67, 'apply_sliding_window': 0, 'no_of_layers': 2, 'no_of_neurons_l0': 60, 'dropout_l0': 0.21005351119706087, 'no_of_neurons_l1': 51, 'dropout_l1': 0.4606694240648326, 'lr': 0.09194522888324932}. Best is trial 2 with value: 0.6377952755905512.\n","output_type":"stream"},{"name":"stdout","text":"No improvement since epoch 1: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:11:12,959] Trial 4 finished with value: 0.11627906976744184 and parameters: {'bs': 91, 'apply_sliding_window': 0, 'no_of_layers': 1, 'no_of_neurons_l0': 29, 'dropout_l0': 0.46575411589271365, 'lr': 0.006370386943886531}. Best is trial 2 with value: 0.6377952755905512.\n","output_type":"stream"},{"name":"stdout","text":"No improvement since epoch 5: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:11:20,983] Trial 5 finished with value: 0.6422018348623855 and parameters: {'bs': 28, 'apply_sliding_window': 0, 'no_of_layers': 2, 'no_of_neurons_l0': 8, 'dropout_l0': 0.30701486802607714, 'no_of_neurons_l1': 49, 'dropout_l1': 0.3830144642222707, 'lr': 0.08618592803236241}. Best is trial 5 with value: 0.6422018348623855.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 3: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:11:29,287] Trial 6 finished with value: 0.24875621890547261 and parameters: {'bs': 115, 'apply_sliding_window': 1, 'no_of_layers': 1, 'no_of_neurons_l0': 44, 'dropout_l0': 0.10897535041257671, 'lr': 0.06646929996197835, 'overlap_pct': 0.3498323035108931, 'with_fft': 1, 'window_size2': 4096}. Best is trial 5 with value: 0.6422018348623855.\n","output_type":"stream"},{"name":"stdout","text":"No improvement since epoch 0: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:11:32,419] Trial 7 finished with value: 0.0697674418604651 and parameters: {'bs': 60, 'apply_sliding_window': 0, 'no_of_layers': 2, 'no_of_neurons_l0': 64, 'dropout_l0': 0.32611565186139463, 'no_of_neurons_l1': 23, 'dropout_l1': 0.50406546704647, 'lr': 0.03933942894264093}. Best is trial 5 with value: 0.6422018348623855.\n","output_type":"stream"},{"name":"stdout","text":"No improvement since epoch 2: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:11:37,468] Trial 8 finished with value: 0.17777777777777778 and parameters: {'bs': 55, 'apply_sliding_window': 0, 'no_of_layers': 2, 'no_of_neurons_l0': 25, 'dropout_l0': 0.36547403555266855, 'no_of_neurons_l1': 29, 'dropout_l1': 0.37758244711358113, 'lr': 0.0875175440510334}. Best is trial 5 with value: 0.6422018348623855.\n","output_type":"stream"},{"name":"stdout","text":"No improvement since epoch 0: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:11:40,597] Trial 9 finished with value: 0.0 and parameters: {'bs': 88, 'apply_sliding_window': 0, 'no_of_layers': 1, 'no_of_neurons_l0': 44, 'dropout_l0': 0.526394739152087, 'lr': 0.05675932171496841}. Best is trial 5 with value: 0.6422018348623855.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 0: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:13:02,497] Trial 10 finished with value: 0.25365853658536586 and parameters: {'bs': 18, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 12, 'dropout_l0': 0.212604160486594, 'no_of_neurons_l1': 60, 'dropout_l1': 0.0251069326112649, 'lr': 0.06990064276407144, 'overlap_pct': 0.9688363233319222, 'with_fft': 0, 'window_size1': 4096}. Best is trial 5 with value: 0.6422018348623855.\n","output_type":"stream"},{"name":"stdout","text":"No improvement since epoch 0: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:13:06,468] Trial 11 finished with value: 0.6377952755905512 and parameters: {'bs': 27, 'apply_sliding_window': 0, 'no_of_layers': 1, 'no_of_neurons_l0': 9, 'dropout_l0': 0.41775341644998404, 'lr': 0.0985332576508442}. Best is trial 5 with value: 0.6422018348623855.\n","output_type":"stream"},{"name":"stdout","text":"No improvement since epoch 3: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:13:12,338] Trial 12 finished with value: 0.6574074074074073 and parameters: {'bs': 39, 'apply_sliding_window': 0, 'no_of_layers': 2, 'no_of_neurons_l0': 17, 'dropout_l0': 0.5947744996366995, 'no_of_neurons_l1': 45, 'dropout_l1': 0.13029569492002038, 'lr': 0.09971164437840747}. Best is trial 12 with value: 0.6574074074074073.\n","output_type":"stream"},{"name":"stdout","text":"No improvement since epoch 5: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:13:19,989] Trial 13 finished with value: 0.5153374233128833 and parameters: {'bs': 44, 'apply_sliding_window': 0, 'no_of_layers': 2, 'no_of_neurons_l0': 19, 'dropout_l0': 0.20945858086478553, 'no_of_neurons_l1': 44, 'dropout_l1': 0.12510833487832743, 'lr': 0.07805991450881367}. Best is trial 12 with value: 0.6574074074074073.\n","output_type":"stream"},{"name":"stdout","text":"No improvement since epoch 2: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:13:25,515] Trial 14 finished with value: 0.28 and parameters: {'bs': 35, 'apply_sliding_window': 0, 'no_of_layers': 2, 'no_of_neurons_l0': 36, 'dropout_l0': 0.022060402449437633, 'no_of_neurons_l1': 41, 'dropout_l1': 0.19760842026522807, 'lr': 0.04763310550803161}. Best is trial 12 with value: 0.6574074074074073.\n","output_type":"stream"},{"name":"stdout","text":"No improvement since epoch 2: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:13:31,380] Trial 15 finished with value: 0.1473684210526316 and parameters: {'bs': 17, 'apply_sliding_window': 0, 'no_of_layers': 2, 'no_of_neurons_l0': 20, 'dropout_l0': 0.42647183413980305, 'no_of_neurons_l1': 8, 'dropout_l1': 0.2152379881542305, 'lr': 0.08037876114100723}. Best is trial 12 with value: 0.6574074074074073.\n","output_type":"stream"},{"name":"stdout","text":"No improvement since epoch 5: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:13:39,021] Trial 16 finished with value: 0.3486238532110092 and parameters: {'bs': 51, 'apply_sliding_window': 0, 'no_of_layers': 2, 'no_of_neurons_l0': 8, 'dropout_l0': 0.24944188216984908, 'no_of_neurons_l1': 56, 'dropout_l1': 0.021563954966314802, 'lr': 0.06625160527301431}. Best is trial 12 with value: 0.6574074074074073.\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:13:51,783] Trial 17 finished with value: 0.4462809917355372 and parameters: {'bs': 76, 'apply_sliding_window': 0, 'no_of_layers': 2, 'no_of_neurons_l0': 34, 'dropout_l0': 0.2991177655829549, 'no_of_neurons_l1': 48, 'dropout_l1': 0.5665605901335838, 'lr': 0.006959279681137846}. Best is trial 12 with value: 0.6574074074074073.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 4: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:14:27,221] Trial 18 finished with value: 0.0 and parameters: {'bs': 32, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 46, 'dropout_l0': 0.5854321018084967, 'no_of_neurons_l1': 64, 'dropout_l1': 0.23927242559149886, 'lr': 0.0879091930471131, 'overlap_pct': 0.7718788461736136, 'with_fft': 0, 'window_size1': 2048}. Best is trial 12 with value: 0.6574074074074073.\n","output_type":"stream"},{"name":"stdout","text":"No improvement since epoch 1: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:14:31,382] Trial 19 finished with value: 0.0 and parameters: {'bs': 126, 'apply_sliding_window': 0, 'no_of_layers': 2, 'no_of_neurons_l0': 22, 'dropout_l0': 0.1325092963504684, 'no_of_neurons_l1': 37, 'dropout_l1': 0.38527296568400093, 'lr': 0.09993535536988277}. Best is trial 12 with value: 0.6574074074074073.\n","output_type":"stream"},{"name":"stdout","text":"No improvement since epoch 6: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:14:40,164] Trial 20 finished with value: 0.5079365079365079 and parameters: {'bs': 45, 'apply_sliding_window': 0, 'no_of_layers': 2, 'no_of_neurons_l0': 15, 'dropout_l0': 0.4976656451344158, 'no_of_neurons_l1': 53, 'dropout_l1': 0.1197018777304508, 'lr': 0.02682834569113314}. Best is trial 12 with value: 0.6574074074074073.\n","output_type":"stream"},{"name":"stdout","text":"No improvement since epoch 2: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:14:45,588] Trial 21 finished with value: 0.0 and parameters: {'bs': 38, 'apply_sliding_window': 0, 'no_of_layers': 1, 'no_of_neurons_l0': 17, 'dropout_l0': 0.5929881514459606, 'lr': 0.09982221224387189}. Best is trial 12 with value: 0.6574074074074073.\n","output_type":"stream"},{"name":"stdout","text":"No improvement since epoch 0: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:14:49,058] Trial 22 finished with value: 0.0 and parameters: {'bs': 26, 'apply_sliding_window': 0, 'no_of_layers': 1, 'no_of_neurons_l0': 8, 'dropout_l0': 0.5566653921858281, 'lr': 0.08948109744970273}. Best is trial 12 with value: 0.6574074074074073.\n","output_type":"stream"},{"name":"stdout","text":"No improvement since epoch 7: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:14:57,976] Trial 23 finished with value: 0.0 and parameters: {'bs': 44, 'apply_sliding_window': 0, 'no_of_layers': 1, 'no_of_neurons_l0': 30, 'dropout_l0': 0.4658308430284437, 'lr': 0.07399630292107306}. Best is trial 12 with value: 0.6574074074074073.\n","output_type":"stream"},{"name":"stdout","text":"No improvement since epoch 2: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:15:03,255] Trial 24 finished with value: 0.0 and parameters: {'bs': 65, 'apply_sliding_window': 0, 'no_of_layers': 1, 'no_of_neurons_l0': 23, 'dropout_l0': 0.410576355609249, 'lr': 0.08578685729115798}. Best is trial 12 with value: 0.6574074074074073.\n","output_type":"stream"},{"name":"stdout","text":"No improvement since epoch 3: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:15:09,892] Trial 25 finished with value: 0.3106796116504854 and parameters: {'bs': 24, 'apply_sliding_window': 0, 'no_of_layers': 2, 'no_of_neurons_l0': 13, 'dropout_l0': 0.4766742249183579, 'no_of_neurons_l1': 32, 'dropout_l1': 0.31360813340270355, 'lr': 0.059102280994874745}. Best is trial 12 with value: 0.6574074074074073.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 1: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:15:18,895] Trial 26 finished with value: 0.5752066115702479 and parameters: {'bs': 74, 'apply_sliding_window': 1, 'no_of_layers': 1, 'no_of_neurons_l0': 17, 'dropout_l0': 0.5957646242062851, 'lr': 0.09380887494314423, 'overlap_pct': 0.6268055429968127, 'with_fft': 1, 'window_size1': 4096}. Best is trial 12 with value: 0.6574074074074073.\n","output_type":"stream"},{"name":"stdout","text":"No improvement since epoch 3: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:15:24,904] Trial 27 finished with value: 0.13333333333333333 and parameters: {'bs': 37, 'apply_sliding_window': 0, 'no_of_layers': 2, 'no_of_neurons_l0': 37, 'dropout_l0': 0.3758414027815224, 'no_of_neurons_l1': 45, 'dropout_l1': 0.10875657839392819, 'lr': 0.08280096273097369}. Best is trial 12 with value: 0.6574074074074073.\n","output_type":"stream"},{"name":"stdout","text":"No improvement since epoch 0: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:15:28,556] Trial 28 finished with value: 0.0 and parameters: {'bs': 53, 'apply_sliding_window': 0, 'no_of_layers': 1, 'no_of_neurons_l0': 12, 'dropout_l0': 0.5309938121057421, 'lr': 0.09436843870050346}. Best is trial 12 with value: 0.6574074074074073.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 5: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:15:39,351] Trial 29 finished with value: 0.0 and parameters: {'bs': 16, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 14, 'dropout_l0': 0.004194201890191651, 'no_of_neurons_l1': 38, 'dropout_l1': 0.4238458254094269, 'lr': 0.07833418575366165, 'overlap_pct': 0.4613892118806262, 'with_fft': 0, 'window_size2': 8192}. Best is trial 12 with value: 0.6574074074074073.\n","output_type":"stream"},{"name":"stdout","text":"No improvement since epoch 2: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:15:44,686] Trial 30 finished with value: 0.0 and parameters: {'bs': 46, 'apply_sliding_window': 0, 'no_of_layers': 1, 'no_of_neurons_l0': 53, 'dropout_l0': 0.05476296699316105, 'lr': 0.07443830186562841}. Best is trial 12 with value: 0.6574074074074073.\n","output_type":"stream"},{"name":"stdout","text":"No improvement since epoch 2: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:15:49,485] Trial 31 finished with value: 0.0 and parameters: {'bs': 66, 'apply_sliding_window': 0, 'no_of_layers': 2, 'no_of_neurons_l0': 64, 'dropout_l0': 0.1535024888186826, 'no_of_neurons_l1': 51, 'dropout_l1': 0.5013880747414743, 'lr': 0.09238602724753381}. Best is trial 12 with value: 0.6574074074074073.\n","output_type":"stream"},{"name":"stdout","text":"No improvement since epoch 3: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:15:55,723] Trial 32 finished with value: 0.0 and parameters: {'bs': 29, 'apply_sliding_window': 0, 'no_of_layers': 2, 'no_of_neurons_l0': 56, 'dropout_l0': 0.27296357878398925, 'no_of_neurons_l1': 56, 'dropout_l1': 0.4596567575006075, 'lr': 0.0934830660716609}. Best is trial 12 with value: 0.6574074074074073.\n","output_type":"stream"},{"name":"stdout","text":"No improvement since epoch 1: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:15:59,946] Trial 33 finished with value: 0.6377952755905512 and parameters: {'bs': 82, 'apply_sliding_window': 0, 'no_of_layers': 2, 'no_of_neurons_l0': 53, 'dropout_l0': 0.18922801864445402, 'no_of_neurons_l1': 49, 'dropout_l1': 0.27341719197243536, 'lr': 0.08740183820333551}. Best is trial 12 with value: 0.6574074074074073.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 2: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:16:07,006] Trial 34 finished with value: 0.7794561933534744 and parameters: {'bs': 95, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 30, 'dropout_l0': 0.3342250836631946, 'no_of_neurons_l1': 46, 'dropout_l1': 0.5976803074794983, 'lr': 0.09518392475847053, 'overlap_pct': 0.00604554559693804, 'with_fft': 1, 'window_size3': 4096}. Best is trial 34 with value: 0.7794561933534744.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 0: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:16:12,570] Trial 35 finished with value: 0.6219081272084805 and parameters: {'bs': 101, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 31, 'dropout_l0': 0.3620750665370051, 'no_of_neurons_l1': 43, 'dropout_l1': 0.5835997909790516, 'lr': 0.08276325028391297, 'overlap_pct': 0.016092858891011627, 'with_fft': 1, 'window_size3': 4096}. Best is trial 34 with value: 0.7794561933534744.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 0: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:16:18,231] Trial 36 finished with value: 0.676 and parameters: {'bs': 116, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 26, 'dropout_l0': 0.3182187645137755, 'no_of_neurons_l1': 30, 'dropout_l1': 0.16293991184466372, 'lr': 0.09449113256498672, 'overlap_pct': 0.23085514591041312, 'with_fft': 1, 'window_size3': 4096}. Best is trial 34 with value: 0.7794561933534744.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 3: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:16:26,128] Trial 37 finished with value: 0.7285223367697594 and parameters: {'bs': 106, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 26, 'dropout_l0': 0.3160283817633154, 'no_of_neurons_l1': 31, 'dropout_l1': 0.1596116395836725, 'lr': 0.09638094676307997, 'overlap_pct': 0.20231971061848247, 'with_fft': 1, 'window_size3': 4096}. Best is trial 34 with value: 0.7794561933534744.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 2: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:16:33,522] Trial 38 finished with value: 0.8025078369905956 and parameters: {'bs': 106, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 27, 'dropout_l0': 0.33282103922661455, 'no_of_neurons_l1': 30, 'dropout_l1': 0.16910764803515765, 'lr': 0.01914272560076681, 'overlap_pct': 0.20879427359524505, 'with_fft': 1, 'window_size3': 4096}. Best is trial 38 with value: 0.8025078369905956.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 1: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:16:39,823] Trial 39 finished with value: 0.7532467532467532 and parameters: {'bs': 105, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 27, 'dropout_l0': 0.3353977178256406, 'no_of_neurons_l1': 27, 'dropout_l1': 0.17879567103622296, 'lr': 0.01851698271404008, 'overlap_pct': 0.2111575066548378, 'with_fft': 1, 'window_size3': 4096}. Best is trial 38 with value: 0.8025078369905956.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 1: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:16:46,203] Trial 40 finished with value: 0.7391304347826088 and parameters: {'bs': 101, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 40, 'dropout_l0': 0.2641064563908131, 'no_of_neurons_l1': 24, 'dropout_l1': 0.07063780539680381, 'lr': 0.01480212412362706, 'overlap_pct': 0.1746000696561552, 'with_fft': 1, 'window_size3': 4096}. Best is trial 38 with value: 0.8025078369905956.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:17:01,928] Trial 41 finished with value: 0.8109756097560975 and parameters: {'bs': 101, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 34, 'dropout_l0': 0.26398664273145794, 'no_of_neurons_l1': 23, 'dropout_l1': 0.05070871159701304, 'lr': 0.01599549281825081, 'overlap_pct': 0.18976264959400085, 'with_fft': 1, 'window_size3': 4096}. Best is trial 41 with value: 0.8109756097560975.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 0: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:17:07,931] Trial 42 finished with value: 0.7429906542056075 and parameters: {'bs': 94, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 40, 'dropout_l0': 0.2659538437308756, 'no_of_neurons_l1': 23, 'dropout_l1': 0.0632329950358725, 'lr': 0.014355590594193342, 'overlap_pct': 0.14944120908469827, 'with_fft': 1, 'window_size3': 4096}. Best is trial 41 with value: 0.8109756097560975.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 1: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:17:14,237] Trial 43 finished with value: 0.7942857142857143 and parameters: {'bs': 94, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 32, 'dropout_l0': 0.3387453547956447, 'no_of_neurons_l1': 17, 'dropout_l1': 0.06660767708655191, 'lr': 0.02283523084809846, 'overlap_pct': 0.005650828046559864, 'with_fft': 1, 'window_size3': 4096}. Best is trial 41 with value: 0.8109756097560975.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 6: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:17:24,901] Trial 44 finished with value: 0.7696335078534031 and parameters: {'bs': 113, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 32, 'dropout_l0': 0.35148183345456946, 'no_of_neurons_l1': 16, 'dropout_l1': 0.06863037231844671, 'lr': 0.028154278864444833, 'overlap_pct': 0.004810026669745572, 'with_fft': 1, 'window_size3': 4096}. Best is trial 41 with value: 0.8109756097560975.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 2: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:17:33,977] Trial 45 finished with value: 0.7596899224806202 and parameters: {'bs': 115, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 33, 'dropout_l0': 0.38354273946336925, 'no_of_neurons_l1': 16, 'dropout_l1': 0.07093805312400822, 'lr': 0.03272825551337047, 'overlap_pct': 0.0062372554990900424, 'with_fft': 1, 'window_size3': 2048}. Best is trial 41 with value: 0.8109756097560975.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 1: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:17:40,082] Trial 46 finished with value: 0.78125 and parameters: {'bs': 95, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 39, 'dropout_l0': 0.33864887712583025, 'no_of_neurons_l1': 16, 'dropout_l1': 0.021273917078770126, 'lr': 0.025487412046327484, 'overlap_pct': 0.002250150470509721, 'with_fft': 1, 'window_size3': 4096}. Best is trial 41 with value: 0.8109756097560975.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 3: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:17:48,646] Trial 47 finished with value: 0.7524271844660193 and parameters: {'bs': 93, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 38, 'dropout_l0': 0.287479428800684, 'no_of_neurons_l1': 17, 'dropout_l1': 0.002565890919722435, 'lr': 0.022023422434540373, 'overlap_pct': 0.09042015759324622, 'with_fft': 1, 'window_size3': 4096}. Best is trial 41 with value: 0.8109756097560975.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 4: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:18:01,659] Trial 48 finished with value: 0.7987987987987988 and parameters: {'bs': 85, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 46, 'dropout_l0': 0.39778769503730316, 'no_of_neurons_l1': 12, 'dropout_l1': 0.02981695262382364, 'lr': 0.0002457737122024753, 'overlap_pct': 0.34693828301656976, 'with_fft': 1, 'window_size2': 2048}. Best is trial 41 with value: 0.8109756097560975.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 4: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:18:15,037] Trial 49 finished with value: 0.7934131736526946 and parameters: {'bs': 87, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 45, 'dropout_l0': 0.4416769513678639, 'no_of_neurons_l1': 10, 'dropout_l1': 0.042670187823694215, 'lr': 0.000588004432711741, 'overlap_pct': 0.37123932408765664, 'with_fft': 1, 'window_size2': 2048}. Best is trial 41 with value: 0.8109756097560975.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 5: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:18:29,184] Trial 50 finished with value: 0.7837398373983739 and parameters: {'bs': 84, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 47, 'dropout_l0': 0.4403946076546458, 'no_of_neurons_l1': 8, 'dropout_l1': 0.04999152399456621, 'lr': 0.0013104923363942166, 'overlap_pct': 0.3502609966582552, 'with_fft': 1, 'window_size2': 2048}. Best is trial 41 with value: 0.8109756097560975.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 5: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:18:43,399] Trial 51 finished with value: 0.7698986975397973 and parameters: {'bs': 86, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 46, 'dropout_l0': 0.39732508523620774, 'no_of_neurons_l1': 8, 'dropout_l1': 0.04841906257659204, 'lr': 0.0003586676022242411, 'overlap_pct': 0.35877383970675636, 'with_fft': 1, 'window_size2': 2048}. Best is trial 41 with value: 0.8109756097560975.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 5: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:18:57,815] Trial 52 finished with value: 0.7727272727272727 and parameters: {'bs': 83, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 42, 'dropout_l0': 0.43655963920236507, 'no_of_neurons_l1': 12, 'dropout_l1': 0.09286086830604026, 'lr': 0.0004439009180452508, 'overlap_pct': 0.3529487114637502, 'with_fft': 1, 'window_size2': 2048}. Best is trial 41 with value: 0.8109756097560975.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 3: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:19:10,415] Trial 53 finished with value: 0.7441285537700864 and parameters: {'bs': 78, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 49, 'dropout_l0': 0.43581054338669295, 'no_of_neurons_l1': 12, 'dropout_l1': 9.86463121068204e-05, 'lr': 0.007015594420324511, 'overlap_pct': 0.30491329823596275, 'with_fft': 1, 'window_size2': 2048}. Best is trial 41 with value: 0.8109756097560975.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 1: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:19:21,220] Trial 54 finished with value: 0.7821067821067821 and parameters: {'bs': 108, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 48, 'dropout_l0': 0.5073035111028045, 'no_of_neurons_l1': 19, 'dropout_l1': 0.0909511718077996, 'lr': 0.011517030733775366, 'overlap_pct': 0.465346475312966, 'with_fft': 1, 'window_size2': 2048}. Best is trial 41 with value: 0.8109756097560975.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 1: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:19:31,625] Trial 55 finished with value: 0.8072837632776936 and parameters: {'bs': 89, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 42, 'dropout_l0': 0.4429546159842969, 'no_of_neurons_l1': 12, 'dropout_l1': 0.140683926787886, 'lr': 0.004002618450381863, 'overlap_pct': 0.4064242546747959, 'with_fft': 1, 'window_size2': 2048}. Best is trial 41 with value: 0.8109756097560975.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 3: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:19:46,150] Trial 56 finished with value: 0.7745839636913766 and parameters: {'bs': 99, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 35, 'dropout_l0': 0.2243686455099498, 'no_of_neurons_l1': 12, 'dropout_l1': 0.148957882286587, 'lr': 0.0340294301261683, 'overlap_pct': 0.54302219592479, 'with_fft': 1, 'window_size1': 2048}. Best is trial 41 with value: 0.8109756097560975.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 4: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:19:58,521] Trial 57 finished with value: 0.7870778267254037 and parameters: {'bs': 89, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 43, 'dropout_l0': 0.3933456754835421, 'no_of_neurons_l1': 20, 'dropout_l1': 0.03799250098698184, 'lr': 0.010838088311815819, 'overlap_pct': 0.2819018491876475, 'with_fft': 1, 'window_size2': 2048}. Best is trial 41 with value: 0.8109756097560975.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 1: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:20:09,459] Trial 58 finished with value: 0.7917282127031018 and parameters: {'bs': 79, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 50, 'dropout_l0': 0.4544199237606609, 'no_of_neurons_l1': 26, 'dropout_l1': 0.10047239363641064, 'lr': 0.004593943919979023, 'overlap_pct': 0.40381616298744116, 'with_fft': 1, 'window_size2': 2048}. Best is trial 41 with value: 0.8109756097560975.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 0: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:20:14,950] Trial 59 finished with value: 0.7987804878048782 and parameters: {'bs': 122, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 28, 'dropout_l0': 0.4845112352173938, 'no_of_neurons_l1': 12, 'dropout_l1': 0.13618460183305542, 'lr': 0.01971388537242486, 'overlap_pct': 0.2550634669412717, 'with_fft': 1, 'window_size2': 4096}. Best is trial 41 with value: 0.8109756097560975.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 1: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:20:21,274] Trial 60 finished with value: 0.7936507936507936 and parameters: {'bs': 126, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 28, 'dropout_l0': 0.4936385064895188, 'no_of_neurons_l1': 14, 'dropout_l1': 0.21091779543648245, 'lr': 0.019748065123764674, 'overlap_pct': 0.2643175155379563, 'with_fft': 1, 'window_size2': 4096}. Best is trial 41 with value: 0.8109756097560975.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 2: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:20:28,479] Trial 61 finished with value: 0.7880597014925372 and parameters: {'bs': 128, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 29, 'dropout_l0': 0.5495675870980938, 'no_of_neurons_l1': 19, 'dropout_l1': 0.22528413916636814, 'lr': 0.01818493757722055, 'overlap_pct': 0.27101537187818875, 'with_fft': 1, 'window_size2': 4096}. Best is trial 41 with value: 0.8109756097560975.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 0: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:20:31,561] Trial 62 finished with value: 0.25 and parameters: {'bs': 121, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 34, 'dropout_l0': 0.49133558734113514, 'no_of_neurons_l1': 14, 'dropout_l1': 0.26069424139700637, 'lr': 0.021888787472822777, 'overlap_pct': 0.1231977117604117, 'with_fft': 1, 'window_size3': 16384}. Best is trial 41 with value: 0.8109756097560975.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 4: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:20:40,777] Trial 63 finished with value: 0.7777777777777778 and parameters: {'bs': 120, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 23, 'dropout_l0': 0.5182862448699814, 'no_of_neurons_l1': 14, 'dropout_l1': 0.18388945320003386, 'lr': 0.009548716010943262, 'overlap_pct': 0.250150658456178, 'with_fft': 1, 'window_size2': 4096}. Best is trial 41 with value: 0.8109756097560975.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 7: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:20:51,767] Trial 64 finished with value: 0.5714285714285714 and parameters: {'bs': 110, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 29, 'dropout_l0': 0.41157655440603363, 'no_of_neurons_l1': 34, 'dropout_l1': 0.13631536397059357, 'lr': 0.03316049930412187, 'overlap_pct': 0.2895157533797077, 'with_fft': 0, 'window_size2': 4096}. Best is trial 41 with value: 0.8109756097560975.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 3: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:21:00,381] Trial 65 finished with value: 0.8132530120481927 and parameters: {'bs': 124, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 21, 'dropout_l0': 0.476856768789681, 'no_of_neurons_l1': 21, 'dropout_l1': 0.1977519527850932, 'lr': 0.038798074450980984, 'overlap_pct': 0.410776699664585, 'with_fft': 1, 'window_size2': 4096}. Best is trial 65 with value: 0.8132530120481927.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 0: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:21:10,908] Trial 66 finished with value: 0.7702888583218707 and parameters: {'bs': 97, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 20, 'dropout_l0': 0.47356527867152165, 'no_of_neurons_l1': 21, 'dropout_l1': 0.12370490216678043, 'lr': 0.04218361828670697, 'overlap_pct': 0.5371018268345478, 'with_fft': 1, 'window_size1': 2048}. Best is trial 65 with value: 0.8132530120481927.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 4: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:21:18,369] Trial 67 finished with value: 0.4822695035460993 and parameters: {'bs': 71, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 24, 'dropout_l0': 0.23706510930916222, 'no_of_neurons_l1': 26, 'dropout_l1': 0.192606370195566, 'lr': 0.014986001737850961, 'overlap_pct': 0.42803042396339763, 'with_fft': 0, 'window_size2': 8192}. Best is trial 65 with value: 0.8132530120481927.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 1: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:21:26,616] Trial 68 finished with value: 0.7891373801916932 and parameters: {'bs': 122, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 37, 'dropout_l0': 0.29295991029867297, 'no_of_neurons_l1': 18, 'dropout_l1': 0.346314880848959, 'lr': 0.03733415144720761, 'overlap_pct': 0.08012530116176808, 'with_fft': 1, 'window_size3': 2048}. Best is trial 65 with value: 0.8132530120481927.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 4: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:21:36,209] Trial 69 finished with value: 0.7733333333333334 and parameters: {'bs': 103, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 21, 'dropout_l0': 0.37319627315733045, 'no_of_neurons_l1': 23, 'dropout_l1': 0.09356792091379831, 'lr': 0.024363287931487156, 'overlap_pct': 0.41136062615951596, 'with_fft': 1, 'window_size2': 4096}. Best is trial 65 with value: 0.8132530120481927.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 8: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:21:48,474] Trial 70 finished with value: 0.5750798722044729 and parameters: {'bs': 119, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 42, 'dropout_l0': 0.34953969983664007, 'no_of_neurons_l1': 10, 'dropout_l1': 0.13546368225256186, 'lr': 0.046454632410547925, 'overlap_pct': 0.49107975378136304, 'with_fft': 0, 'window_size2': 4096}. Best is trial 65 with value: 0.8132530120481927.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 3: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:21:56,991] Trial 71 finished with value: 0.7756410256410257 and parameters: {'bs': 126, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 27, 'dropout_l0': 0.4791927354574535, 'no_of_neurons_l1': 14, 'dropout_l1': 0.20905976398850873, 'lr': 0.019332020231491283, 'overlap_pct': 0.3023339380725004, 'with_fft': 1, 'window_size2': 4096}. Best is trial 65 with value: 0.8132530120481927.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 3: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:22:04,312] Trial 72 finished with value: 0.7951807228915663 and parameters: {'bs': 110, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 32, 'dropout_l0': 0.461069463512975, 'no_of_neurons_l1': 21, 'dropout_l1': 0.2420838714525235, 'lr': 0.0037203024105480313, 'overlap_pct': 0.18436965960733162, 'with_fft': 1, 'window_size3': 8192}. Best is trial 65 with value: 0.8132530120481927.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 5: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:22:12,976] Trial 73 finished with value: 0.8050314465408804 and parameters: {'bs': 110, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 32, 'dropout_l0': 0.4615058637768118, 'no_of_neurons_l1': 21, 'dropout_l1': 0.2288217696259481, 'lr': 0.004829836660475879, 'overlap_pct': 0.18740146927060408, 'with_fft': 1, 'window_size3': 8192}. Best is trial 65 with value: 0.8132530120481927.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 2: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:22:19,001] Trial 74 finished with value: 0.7898089171974522 and parameters: {'bs': 110, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 35, 'dropout_l0': 0.46169756286267627, 'no_of_neurons_l1': 28, 'dropout_l1': 0.2628830703371537, 'lr': 0.004785372057070846, 'overlap_pct': 0.18704135757116033, 'with_fft': 1, 'window_size3': 8192}. Best is trial 65 with value: 0.8132530120481927.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 6: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:22:28,610] Trial 75 finished with value: 0.825 and parameters: {'bs': 112, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 25, 'dropout_l0': 0.5534276339765585, 'no_of_neurons_l1': 25, 'dropout_l1': 0.2329294839045852, 'lr': 0.008454377697753273, 'overlap_pct': 0.1408325971604751, 'with_fft': 1, 'window_size3': 8192}. Best is trial 75 with value: 0.825.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 2: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:22:34,953] Trial 76 finished with value: 0.8074534161490683 and parameters: {'bs': 117, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 25, 'dropout_l0': 0.5674067141324629, 'no_of_neurons_l1': 25, 'dropout_l1': 0.280213108137802, 'lr': 0.008355176854670103, 'overlap_pct': 0.14393795830063588, 'with_fft': 1, 'window_size3': 8192}. Best is trial 75 with value: 0.825.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 2: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:22:41,208] Trial 77 finished with value: 0.7831325301204819 and parameters: {'bs': 116, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 25, 'dropout_l0': 0.5576098345301338, 'no_of_neurons_l1': 24, 'dropout_l1': 0.2943964146301521, 'lr': 0.010590335546955312, 'overlap_pct': 0.13352445864510276, 'with_fft': 1, 'window_size3': 8192}. Best is trial 75 with value: 0.825.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 6: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:22:50,888] Trial 78 finished with value: 0.7926829268292682 and parameters: {'bs': 113, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 18, 'dropout_l0': 0.5757578932317498, 'no_of_neurons_l1': 33, 'dropout_l1': 0.28392363688780986, 'lr': 0.006293559119516932, 'overlap_pct': 0.11314862401214607, 'with_fft': 1, 'window_size3': 8192}. Best is trial 75 with value: 0.825.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 1: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:23:41,399] Trial 79 finished with value: 0.7659574468085106 and parameters: {'bs': 105, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 22, 'dropout_l0': 0.5413662583434085, 'no_of_neurons_l1': 29, 'dropout_l1': 0.2384577365828659, 'lr': 0.05834818907772037, 'overlap_pct': 0.9657902081267322, 'with_fft': 1, 'window_size1': 4096}. Best is trial 75 with value: 0.825.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 0: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:23:45,365] Trial 80 finished with value: 0.18181818181818182 and parameters: {'bs': 98, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 25, 'dropout_l0': 0.5700073555482936, 'no_of_neurons_l1': 25, 'dropout_l1': 0.3264959587686389, 'lr': 0.008257257632216554, 'overlap_pct': 0.0502247013733807, 'with_fft': 0, 'window_size3': 8192}. Best is trial 75 with value: 0.825.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 3: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:23:51,998] Trial 81 finished with value: 0.6808510638297872 and parameters: {'bs': 118, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 30, 'dropout_l0': 0.5145968189033345, 'no_of_neurons_l1': 27, 'dropout_l1': 0.1717258707380701, 'lr': 0.013738746726218986, 'overlap_pct': 0.22368552473962203, 'with_fft': 1, 'window_size3': 8192}. Best is trial 75 with value: 0.825.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 4: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:24:00,227] Trial 82 finished with value: 0.7684210526315789 and parameters: {'bs': 124, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 28, 'dropout_l0': 0.4210741656024111, 'no_of_neurons_l1': 22, 'dropout_l1': 0.1528382323467908, 'lr': 0.012732858446702133, 'overlap_pct': 0.15879375018064382, 'with_fft': 1, 'window_size3': 8192}. Best is trial 75 with value: 0.825.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 2: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:24:06,732] Trial 83 finished with value: 0.7403846153846153 and parameters: {'bs': 112, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 24, 'dropout_l0': 0.502137077145461, 'no_of_neurons_l1': 30, 'dropout_l1': 0.22740893054906489, 'lr': 0.0036129503722786512, 'overlap_pct': 0.23411315812514416, 'with_fft': 1, 'window_size3': 8192}. Best is trial 75 with value: 0.825.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 4: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:24:14,561] Trial 84 finished with value: 0.7812500000000001 and parameters: {'bs': 91, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 19, 'dropout_l0': 0.5369966412655115, 'no_of_neurons_l1': 36, 'dropout_l1': 0.2507086653625029, 'lr': 0.016249254938767214, 'overlap_pct': 0.21246913702999748, 'with_fft': 1, 'window_size3': 8192}. Best is trial 75 with value: 0.825.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 2: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:24:24,168] Trial 85 finished with value: 0.7638668779714738 and parameters: {'bs': 118, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 27, 'dropout_l0': 0.5245647526841859, 'no_of_neurons_l1': 22, 'dropout_l1': 0.198269059528287, 'lr': 0.009497190055311052, 'overlap_pct': 0.16361408774796224, 'with_fft': 1, 'window_size3': 2048}. Best is trial 75 with value: 0.825.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 1: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:24:29,841] Trial 86 finished with value: 0.7399999999999999 and parameters: {'bs': 107, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 16, 'dropout_l0': 0.4892200392171673, 'no_of_neurons_l1': 25, 'dropout_l1': 0.11310087593251753, 'lr': 0.017180303794146087, 'overlap_pct': 0.3273822322101103, 'with_fft': 1, 'window_size2': 8192}. Best is trial 75 with value: 0.825.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 3: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:24:35,404] Trial 87 finished with value: 0.25 and parameters: {'bs': 123, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 31, 'dropout_l0': 0.4527768646988228, 'no_of_neurons_l1': 19, 'dropout_l1': 0.17776408345520578, 'lr': 0.03092323467429154, 'overlap_pct': 0.06166983720443431, 'with_fft': 1, 'window_size3': 16384}. Best is trial 75 with value: 0.825.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 1: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:24:44,980] Trial 88 finished with value: 0.7813411078717202 and parameters: {'bs': 114, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 22, 'dropout_l0': 0.4025366012684912, 'no_of_neurons_l1': 11, 'dropout_l1': 0.3021781267904895, 'lr': 0.002888567416019422, 'overlap_pct': 0.39739542407924777, 'with_fft': 1, 'window_size2': 2048}. Best is trial 75 with value: 0.825.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:25:01,146] Trial 89 finished with value: 0.8023255813953488 and parameters: {'bs': 103, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 36, 'dropout_l0': 0.19044361232154808, 'no_of_neurons_l1': 28, 'dropout_l1': 0.2199390942555406, 'lr': 0.007030471669693168, 'overlap_pct': 0.3204350747863527, 'with_fft': 1, 'window_size2': 4096}. Best is trial 75 with value: 0.825.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 4: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:25:14,051] Trial 90 finished with value: 0.768472906403941 and parameters: {'bs': 104, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 40, 'dropout_l0': 0.15687069253330965, 'no_of_neurons_l1': 28, 'dropout_l1': 0.2728706166703185, 'lr': 0.007006452436393749, 'overlap_pct': 0.32411638311738855, 'with_fft': 1, 'window_size2': 2048}. Best is trial 75 with value: 0.825.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 2: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:25:21,888] Trial 91 finished with value: 0.7609427609427609 and parameters: {'bs': 101, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 34, 'dropout_l0': 0.11633044540077782, 'no_of_neurons_l1': 32, 'dropout_l1': 0.22061307612269976, 'lr': 0.008347476860591507, 'overlap_pct': 0.44685627704704023, 'with_fft': 1, 'window_size2': 4096}. Best is trial 75 with value: 0.825.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 1: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:25:28,264] Trial 92 finished with value: 0.737913486005089 and parameters: {'bs': 108, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 36, 'dropout_l0': 0.1768737669873487, 'no_of_neurons_l1': 24, 'dropout_l1': 0.19428493117558518, 'lr': 0.012118212828337872, 'overlap_pct': 0.3699051007906171, 'with_fft': 1, 'window_size2': 4096}. Best is trial 75 with value: 0.825.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 9: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:25:38,730] Trial 93 finished with value: 0.2222222222222222 and parameters: {'bs': 116, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 38, 'dropout_l0': 0.07597323501153082, 'no_of_neurons_l1': 21, 'dropout_l1': 0.16020380542759566, 'lr': 0.05228700285704771, 'overlap_pct': 0.2009288871739657, 'with_fft': 1, 'window_size3': 16384}. Best is trial 75 with value: 0.825.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 2: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:25:45,360] Trial 94 finished with value: 0.7891891891891891 and parameters: {'bs': 91, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 33, 'dropout_l0': 0.24808018970383616, 'no_of_neurons_l1': 40, 'dropout_l1': 0.20862302718924683, 'lr': 0.00569618516711306, 'overlap_pct': 0.2490386435234627, 'with_fft': 1, 'window_size3': 8192}. Best is trial 75 with value: 0.825.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 4: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:25:54,073] Trial 95 finished with value: 0.8022922636103154 and parameters: {'bs': 110, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 28, 'dropout_l0': 0.5612843957134909, 'no_of_neurons_l1': 26, 'dropout_l1': 0.01929075604309667, 'lr': 0.002264544512899385, 'overlap_pct': 0.3295950496427783, 'with_fft': 1, 'window_size2': 4096}. Best is trial 75 with value: 0.825.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 4: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:26:03,182] Trial 96 finished with value: 0.7818696883852692 and parameters: {'bs': 102, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 44, 'dropout_l0': 0.5658226610892576, 'no_of_neurons_l1': 29, 'dropout_l1': 0.025685156998948924, 'lr': 0.003243893121675222, 'overlap_pct': 0.33257897563428196, 'with_fft': 1, 'window_size2': 4096}. Best is trial 75 with value: 0.825.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 9: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:26:15,203] Trial 97 finished with value: 0.8048780487804879 and parameters: {'bs': 111, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 31, 'dropout_l0': 0.5918844325063262, 'no_of_neurons_l1': 26, 'dropout_l1': 0.02157744692842334, 'lr': 0.0022446849323604226, 'overlap_pct': 0.10463781876368619, 'with_fft': 1, 'window_size3': 8192}. Best is trial 75 with value: 0.825.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 2: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:26:21,414] Trial 98 finished with value: 0.7425149700598801 and parameters: {'bs': 110, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 31, 'dropout_l0': 0.5469827537814894, 'no_of_neurons_l1': 27, 'dropout_l1': 0.013625959468756763, 'lr': 0.00959419058219525, 'overlap_pct': 0.14086858939788574, 'with_fft': 1, 'window_size3': 8192}. Best is trial 75 with value: 0.825.\n","output_type":"stream"},{"name":"stdout","text":"valid == train\nNo improvement since epoch 4: early stopping\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"name":"stderr","text":"[I 2024-04-18 03:26:29,076] Trial 99 finished with value: 0.7448275862068966 and parameters: {'bs': 107, 'apply_sliding_window': 1, 'no_of_layers': 2, 'no_of_neurons_l0': 26, 'dropout_l0': 0.5878108782442975, 'no_of_neurons_l1': 31, 'dropout_l1': 0.23105294657104836, 'lr': 0.06268369460931435, 'overlap_pct': 0.10852673346737979, 'with_fft': 1, 'window_size3': 8192}. Best is trial 75 with value: 0.825.\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# Results","metadata":{}},{"cell_type":"code","source":"print(\"Study statistics: \")\nprint(\"  Number of finished trials: \", len(study.trials))\nprint(\"Best trial:\")\ntrial = study.best_trial\n\nprint(\"  Value: \", trial.value)\n\nprint(\"  Params: \")\nfor key, value in trial.params.items():\n    print(\"    {}: {}\".format(key, value))\n    \noptuna.importance.get_param_importances(study)","metadata":{"execution":{"iopub.status.busy":"2024-04-18T03:34:08.112797Z","iopub.execute_input":"2024-04-18T03:34:08.113696Z","iopub.status.idle":"2024-04-18T03:34:09.695004Z","shell.execute_reply.started":"2024-04-18T03:34:08.113660Z","shell.execute_reply":"2024-04-18T03:34:09.693748Z"},"trusted":true},"execution_count":55,"outputs":[{"name":"stdout","text":"Study statistics: \n  Number of finished trials:  100\nBest trial:\n  Value:  0.825\n  Params: \n    bs: 112\n    apply_sliding_window: 1\n    no_of_layers: 2\n    no_of_neurons_l0: 25\n    dropout_l0: 0.5534276339765585\n    no_of_neurons_l1: 25\n    dropout_l1: 0.2329294839045852\n    lr: 0.008454377697753273\n    overlap_pct: 0.1408325971604751\n    with_fft: 1\n    window_size3: 8192\n","output_type":"stream"},{"execution_count":55,"output_type":"execute_result","data":{"text/plain":"{'bs': 0.3427436720866629,\n 'apply_sliding_window': 0.20832075211837484,\n 'lr': 0.14928279112492035,\n 'no_of_layers': 0.13435134955467185,\n 'dropout_l0': 0.10116692326094348,\n 'no_of_neurons_l0': 0.06413451185442656}"},"metadata":{}}]},{"cell_type":"code","source":"plotly_config = {\"staticPlot\": True}\nfig = plot_optimization_history(study)\nfig.show(config=plotly_config)","metadata":{"execution":{"iopub.status.busy":"2024-04-18T03:26:30.652716Z","iopub.execute_input":"2024-04-18T03:26:30.653366Z","iopub.status.idle":"2024-04-18T03:26:30.697733Z","shell.execute_reply.started":"2024-04-18T03:26:30.653329Z","shell.execute_reply":"2024-04-18T03:26:30.696575Z"},"trusted":true},"execution_count":45,"outputs":[{"output_type":"display_data","data":{"text/html":"<div>                            <div id=\"73dd17a6-e5a5-4a14-8830-5f30ab2c1305\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"73dd17a6-e5a5-4a14-8830-5f30ab2c1305\")) {                    Plotly.newPlot(                        \"73dd17a6-e5a5-4a14-8830-5f30ab2c1305\",                        [{\"mode\":\"markers\",\"name\":\"Objective Value\",\"x\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99],\"y\":[0.4,0.3148148148148148,0.6377952755905512,0.6377952755905512,0.11627906976744184,0.6422018348623855,0.24875621890547261,0.0697674418604651,0.17777777777777778,0.0,0.25365853658536586,0.6377952755905512,0.6574074074074073,0.5153374233128833,0.28,0.1473684210526316,0.3486238532110092,0.4462809917355372,0.0,0.0,0.5079365079365079,0.0,0.0,0.0,0.0,0.3106796116504854,0.5752066115702479,0.13333333333333333,0.0,0.0,0.0,0.0,0.0,0.6377952755905512,0.7794561933534744,0.6219081272084805,0.676,0.7285223367697594,0.8025078369905956,0.7532467532467532,0.7391304347826088,0.8109756097560975,0.7429906542056075,0.7942857142857143,0.7696335078534031,0.7596899224806202,0.78125,0.7524271844660193,0.7987987987987988,0.7934131736526946,0.7837398373983739,0.7698986975397973,0.7727272727272727,0.7441285537700864,0.7821067821067821,0.8072837632776936,0.7745839636913766,0.7870778267254037,0.7917282127031018,0.7987804878048782,0.7936507936507936,0.7880597014925372,0.25,0.7777777777777778,0.5714285714285714,0.8132530120481927,0.7702888583218707,0.4822695035460993,0.7891373801916932,0.7733333333333334,0.5750798722044729,0.7756410256410257,0.7951807228915663,0.8050314465408804,0.7898089171974522,0.825,0.8074534161490683,0.7831325301204819,0.7926829268292682,0.7659574468085106,0.18181818181818182,0.6808510638297872,0.7684210526315789,0.7403846153846153,0.7812500000000001,0.7638668779714738,0.7399999999999999,0.25,0.7813411078717202,0.8023255813953488,0.768472906403941,0.7609427609427609,0.737913486005089,0.2222222222222222,0.7891891891891891,0.8022922636103154,0.7818696883852692,0.8048780487804879,0.7425149700598801,0.7448275862068966],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Best Value\",\"x\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99],\"y\":[0.4,0.4,0.6377952755905512,0.6377952755905512,0.6377952755905512,0.6422018348623855,0.6422018348623855,0.6422018348623855,0.6422018348623855,0.6422018348623855,0.6422018348623855,0.6422018348623855,0.6574074074074073,0.6574074074074073,0.6574074074074073,0.6574074074074073,0.6574074074074073,0.6574074074074073,0.6574074074074073,0.6574074074074073,0.6574074074074073,0.6574074074074073,0.6574074074074073,0.6574074074074073,0.6574074074074073,0.6574074074074073,0.6574074074074073,0.6574074074074073,0.6574074074074073,0.6574074074074073,0.6574074074074073,0.6574074074074073,0.6574074074074073,0.6574074074074073,0.7794561933534744,0.7794561933534744,0.7794561933534744,0.7794561933534744,0.8025078369905956,0.8025078369905956,0.8025078369905956,0.8109756097560975,0.8109756097560975,0.8109756097560975,0.8109756097560975,0.8109756097560975,0.8109756097560975,0.8109756097560975,0.8109756097560975,0.8109756097560975,0.8109756097560975,0.8109756097560975,0.8109756097560975,0.8109756097560975,0.8109756097560975,0.8109756097560975,0.8109756097560975,0.8109756097560975,0.8109756097560975,0.8109756097560975,0.8109756097560975,0.8109756097560975,0.8109756097560975,0.8109756097560975,0.8109756097560975,0.8132530120481927,0.8132530120481927,0.8132530120481927,0.8132530120481927,0.8132530120481927,0.8132530120481927,0.8132530120481927,0.8132530120481927,0.8132530120481927,0.8132530120481927,0.825,0.825,0.825,0.825,0.825,0.825,0.825,0.825,0.825,0.825,0.825,0.825,0.825,0.825,0.825,0.825,0.825,0.825,0.825,0.825,0.825,0.825,0.825,0.825,0.825],\"type\":\"scatter\"},{\"marker\":{\"color\":\"#cccccc\"},\"mode\":\"markers\",\"name\":\"Infeasible Trial\",\"showlegend\":false,\"x\":[],\"y\":[],\"type\":\"scatter\"}],                        {\"title\":{\"text\":\"Optimization History Plot\"},\"xaxis\":{\"title\":{\"text\":\"Trial\"}},\"yaxis\":{\"title\":{\"text\":\"Objective Value\"}},\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}}},                        {\"staticPlot\": true, \"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('73dd17a6-e5a5-4a14-8830-5f30ab2c1305');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>"},"metadata":{}}]},{"cell_type":"code","source":"fig = plot_param_importances(study)\nfig.show(config=plotly_config)","metadata":{"execution":{"iopub.status.busy":"2024-04-18T03:26:30.698921Z","iopub.execute_input":"2024-04-18T03:26:30.699258Z","iopub.status.idle":"2024-04-18T03:26:32.347147Z","shell.execute_reply.started":"2024-04-18T03:26:30.699232Z","shell.execute_reply":"2024-04-18T03:26:32.346259Z"},"trusted":true},"execution_count":46,"outputs":[{"output_type":"display_data","data":{"text/html":"<div>                            <div id=\"737aeb61-dff2-41dd-885c-5acef0e57841\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"737aeb61-dff2-41dd-885c-5acef0e57841\")) {                    Plotly.newPlot(                        \"737aeb61-dff2-41dd-885c-5acef0e57841\",                        [{\"cliponaxis\":false,\"hovertemplate\":[\"no_of_neurons_l0 (IntDistribution): 0.059269487938102695\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"dropout_l0 (FloatDistribution): 0.12508999414248484\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"no_of_layers (IntDistribution): 0.1329936663708114\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"lr (FloatDistribution): 0.14777451577431827\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"apply_sliding_window (CategoricalDistribution): 0.2075529407914883\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"bs (IntDistribution): 0.32731939498279466\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\"],\"name\":\"Objective Value\",\"orientation\":\"h\",\"text\":[\"0.06\",\"0.13\",\"0.13\",\"0.15\",\"0.21\",\"0.33\"],\"textposition\":\"outside\",\"x\":[0.059269487938102695,0.12508999414248484,0.1329936663708114,0.14777451577431827,0.2075529407914883,0.32731939498279466],\"y\":[\"no_of_neurons_l0\",\"dropout_l0\",\"no_of_layers\",\"lr\",\"apply_sliding_window\",\"bs\"],\"type\":\"bar\"}],                        {\"title\":{\"text\":\"Hyperparameter Importances\"},\"xaxis\":{\"title\":{\"text\":\"Hyperparameter Importance\"}},\"yaxis\":{\"title\":{\"text\":\"Hyperparameter\"}},\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}}},                        {\"staticPlot\": true, \"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('737aeb61-dff2-41dd-885c-5acef0e57841');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>"},"metadata":{}}]},{"cell_type":"markdown","source":"* getting the variables ready to train on them ","metadata":{}},{"cell_type":"code","source":"layers=[]\ndropouts=[]\nif(trial.params['no_of_layers']==1):\n    layers=trial.params['no_of_neurons_l0']\n    dropouts=trial.params['dropout_l0']\nelse:\n    layers.append(trial.params['no_of_neurons_l0'])\n    layers.append(trial.params['no_of_neurons_l1'])\n    dropouts.append(trial.params['dropout_l0'])\n    dropouts.append(trial.params['dropout_l1'])    ","metadata":{"execution":{"iopub.status.busy":"2024-04-18T03:26:32.348230Z","iopub.execute_input":"2024-04-18T03:26:32.348509Z","iopub.status.idle":"2024-04-18T03:26:32.354568Z","shell.execute_reply.started":"2024-04-18T03:26:32.348485Z","shell.execute_reply":"2024-04-18T03:26:32.353676Z"},"trusted":true},"execution_count":47,"outputs":[]},{"cell_type":"markdown","source":"# Training with the best found hyperparamters","metadata":{}},{"cell_type":"code","source":"if (apply_sliding_window):\n        if (trial.params['overlap_pct']>0.5): # to avoid an error in ArrayGenerator \n            X_train, y_train = ArrayGenerator.apply_sliding_window(\n            X_train1, y_train1, window_size=trial.params['window_size1'], with_fft=trial.params['with_fft'], overlap_pct=trial.params['overlap_pct']\n            )\n            X_test, y_test = ArrayGenerator.apply_sliding_window(\n                X_test1, y_test1, window_size=trial.params['window_size1'], with_fft=trial.params['with_fft'], overlap_pct=0\n            )\n\n        elif(trial.params['overlap_pct']>0.25):\n            X_train, y_train = ArrayGenerator.apply_sliding_window(\n            X_train1, y_train1, window_size=trial.params['window_size2'], with_fft=trial.params['with_fft'], overlap_pct=trial.params['overlap_pct']\n            )\n            X_test, y_test = ArrayGenerator.apply_sliding_window(\n                X_test1, y_test1, window_size=trial.params['window_size2'], with_fft=trial.params['with_fft'], overlap_pct=0\n            )\n        else:\n            X_train, y_train = ArrayGenerator.apply_sliding_window(\n            X_train1, y_train1, window_size=trial.params['window_size3'], with_fft=trial.params['with_fft'], overlap_pct=trial.params['overlap_pct']\n            )\n            X_test, y_test = ArrayGenerator.apply_sliding_window(\n                X_test1, y_test1, window_size=trial.params['window_size3'], with_fft=trial.params['with_fft'], overlap_pct=0\n            )\n        train_balance_splits = get_splits(\n            y_train, valid_size=0, balance=True, strategy=\"oversample\", shuffle=True,show_plot=False\n        )\n        X_train, y_train = X_train[train_balance_splits[0]], y_train[train_balance_splits[0]]\n        X, y, splits = combine_split_data([X_train, X_test], [y_train, y_test])\n        dls = get_ts_dls(\n            X,\n            y,\n            splits=splits,\n            tfms=tfms,\n            shuffle_train=True,\n            batch_tfms=batch_tfms,\n            bs=[trial.params['bs'], 256],\n        )\n        seq_len=X_train.shape[-1]\nelse:\n        dls = get_ts_dls(\n            x_nonan_padded,\n            raw_y,\n            splits=report_splits,\n            tfms=tfms,\n            shuffle_train=True,\n            batch_tfms=batch_tfms,\n            bs=[trial.params['bs'], 256],\n            )\n        seq_len=16384\nmodel = MLP(\n    dls.vars, dls.c, seq_len=seq_len, layers=layers, ps=dropouts, use_bn=True)\nlearn = Learner(\n    dls, model,lr=trial.params['lr'], metrics=[accuracy, Precision(), Recall(), F1Score(), BalancedAccuracy()])\n\nlearn.fit_one_cycle(15, cbs=callbacks);\n","metadata":{"execution":{"iopub.status.busy":"2024-04-18T03:30:41.775674Z","iopub.execute_input":"2024-04-18T03:30:41.776326Z","iopub.status.idle":"2024-04-18T03:30:48.414112Z","shell.execute_reply.started":"2024-04-18T03:30:41.776287Z","shell.execute_reply":"2024-04-18T03:30:48.413175Z"},"trusted":true},"execution_count":50,"outputs":[{"name":"stdout","text":"valid == train\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: left;\">\n      <th>epoch</th>\n      <th>train_loss</th>\n      <th>valid_loss</th>\n      <th>accuracy</th>\n      <th>precision_score</th>\n      <th>recall_score</th>\n      <th>f1_score</th>\n      <th>balanced_accuracy_score</th>\n      <th>time</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>0</td>\n      <td>0.642609</td>\n      <td>0.607451</td>\n      <td>0.623256</td>\n      <td>1.000000</td>\n      <td>0.068966</td>\n      <td>0.129032</td>\n      <td>0.534483</td>\n      <td>00:00</td>\n    </tr>\n    <tr>\n      <td>1</td>\n      <td>0.590337</td>\n      <td>0.540743</td>\n      <td>0.790698</td>\n      <td>0.738636</td>\n      <td>0.747126</td>\n      <td>0.742857</td>\n      <td>0.783719</td>\n      <td>00:00</td>\n    </tr>\n    <tr>\n      <td>2</td>\n      <td>0.527849</td>\n      <td>0.408494</td>\n      <td>0.851163</td>\n      <td>0.831325</td>\n      <td>0.793103</td>\n      <td>0.811765</td>\n      <td>0.841864</td>\n      <td>00:00</td>\n    </tr>\n    <tr>\n      <td>3</td>\n      <td>0.462774</td>\n      <td>0.389435</td>\n      <td>0.832558</td>\n      <td>0.904762</td>\n      <td>0.655172</td>\n      <td>0.760000</td>\n      <td>0.804149</td>\n      <td>00:00</td>\n    </tr>\n    <tr>\n      <td>4</td>\n      <td>0.398615</td>\n      <td>0.373801</td>\n      <td>0.841860</td>\n      <td>0.863014</td>\n      <td>0.724138</td>\n      <td>0.787500</td>\n      <td>0.823006</td>\n      <td>00:00</td>\n    </tr>\n    <tr>\n      <td>5</td>\n      <td>0.350632</td>\n      <td>0.467094</td>\n      <td>0.776744</td>\n      <td>0.669565</td>\n      <td>0.885057</td>\n      <td>0.762376</td>\n      <td>0.794091</td>\n      <td>00:00</td>\n    </tr>\n  </tbody>\n</table>"},"metadata":{}},{"name":"stdout","text":"No improvement since epoch 2: early stopping\n","output_type":"stream"}]},{"cell_type":"code","source":"learn.show_probas()\ninterp = ClassificationInterpretation.from_learner(learn)\ninterp.plot_confusion_matrix()\nvalid_dl = dls.valid\nvalid_probas, valid_targets, valid_preds = learn.get_preds(dl=valid_dl, with_decoded=True)\nfrom sklearn.metrics import roc_curve, auc\nimport matplotlib.pyplot as plt\n\npositive_probs = valid_probas[:, 1]\n#Draw ROC curve to help us adjust the threshold to a better value.\nfpr, tpr, thresholds = roc_curve(valid_targets, positive_probs)\nroc_auc = auc(fpr, tpr)\n\nplt.figure(figsize=(8, 6))\nplt.plot(fpr, tpr, color='blue', lw=2, label=f'ROC curve (AUC = {roc_auc:.2f})')\nplt.plot([0, 1], [0, 1], color='gray', linestyle='--')\nplt.xlim([0.0, 1.0])\nplt.ylim([0.0, 1.05])\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.title('Receiver Operating Characteristic (ROC) Curve')\nplt.legend(loc='lower right')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-04-18T03:30:49.773947Z","iopub.execute_input":"2024-04-18T03:30:49.774321Z","iopub.status.idle":"2024-04-18T03:30:50.420692Z","shell.execute_reply.started":"2024-04-18T03:30:49.774279Z","shell.execute_reply":"2024-04-18T03:30:50.419769Z"},"trusted":true},"execution_count":51,"outputs":[{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 600x600 with 1 Axes>","image/png":""},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":""},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 800x600 with 1 Axes>","image/png":""},"metadata":{}}]}]}